<?php

declare(strict_types=1);

namespace App\Domain\Telegram\Command\Telegram\Marriage\Manual;

use App\Domain\Telegram\Command\Telegram\Marriage\Trait\KeyboardTrait;
use App\Infrastructure\Doctrine\Entity\TelegramUser;
use Telegram\Bot\Api;

final readonly class SendSecondDayNotificationMessage
{
    use KeyboardTrait;

    public function __construct() {}

    public function handleDirectly(Api $telegram, TelegramUser $telegramUser): void
    {
        $message = sprintf(
            <<<'TXT'
            –ü—Ä–∏–≤–µ—Ç! 
            –ú—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤ –±–æ—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ç–æ—Ä–æ–º –¥–≤–µ —Å–≤–∞–¥—å–±—ã <b>(05.06.25)</b>
            TXT,
        );

        $telegram->sendMessage([
            'chat_id' => $telegramUser->getChatId(),
            'parse_mode' => 'HTML',
            'text' => $message,
        ]);

        $keyboard = [
            'inline_keyboard' => [
                [
                    ['text' => '–î–∞, –±—É–¥—É üï∫üèªüíÉüèº', 'callback_data' => 'second-day-yes'],
                ],
                [
                    ['text' => '–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è üòî', 'callback_data' => 'second-day-no'],
                ]
            ]
        ];

        $this->sendMessageWithKeyboard(
            $telegram,
            $telegramUser,
            '–ü–ª–∞–Ω–∏—Ä—É–µ—à—å –ª–∏ —Ç—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–º –¥–Ω–µ?',
            $keyboard
        );
    }
}

